import java.util.*;

class Node {
    int data;
    Node left;
    Node right;

    public Node(int val) {
        data = val;
        left = null;
        right = null;
    }
}

class LevelOrderTraversal{
    public static List<Integer> levelOrder(Node root){
        Queue<Node> q=new LinkedList<>();
        List<Integer> ans=new ArrayList<>();
        if (root == null) return ans;

        q.offer(root);
        while(!q.isEmpty()){
            int len=q.size();
            for(int i=0;i<len;i++){
                 Node curr=q.poll();
                 if(curr.left!=null) q.offer(curr.left);
                 if(curr.right!=null) q.offer(curr.right);
                 ans.add(curr.data);

            }

        }
        return ans;
    }
}

class BinaryTree {
    public static void main(String[] args) {
        Node root = new Node(1);
        root.left = new Node(2);
        root.right = new Node(3);
        root.left.left = new Node(4);
        root.left.right = new Node(5);
        root.right.left = new Node(6);
        root.right.right = new Node(7);
        
        LevelOrderTraversal levelorder=new LevelOrderTraversal();
        
        List<Integer> res=levelorder.levelOrder(root);
        
        for(int i:res){
            System.out.print(i+" ");
        }
    }
}
